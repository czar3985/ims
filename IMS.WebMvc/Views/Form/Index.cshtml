@using Newtonsoft.Json;
@model IMS.WebMvc.Models.FormViewModel
@{
    ViewBag.Title = "Forms";
}

<div id="forms-index-html" ng-controller="formsIndexCtrl" ng-init="ctrlInit(@JsonConvert.SerializeObject(@Model))">

    <div id="confirm-delete-modal" class="modal fade" tabindex="-1" role="dialog">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                    <h4 class="modal-title">Delete Form</h4>
                </div>
                <div class="modal-body">
                    <div>Are you sure you want to delete this form from the system?</div>
                    <div>Go.BIG IMS cannot undo this action.</div>
                    <div class="form-bottom-action">
                        <button type="button" class="btn btn-default" data-dismiss="modal">Cancel</button>
                        <button type="button" class="btn btn-primary" ng-click="confirmDelete()">OK</button>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <div id="add-form-modal" class="modal fade" tabindex="-1" role="dialog">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                    <h4 class="modal-title">Upload New Form</h4>
                </div>
                <div class="modal-body">
                    <form class="form-horizontal" method="post" action='@Url.Action("Create", "Form")' new { enctype="multipart/form-data" }>
                        <div>
                            <div class="form-group">
                                @Html.LabelFor(m => Model.NewForm.InsuranceProviderId, htmlAttributes: new { @class = "control-label col-sm-4" })
                                <div class="col-sm-8">
                                    <select name="NewForm.InsuranceProviderId" class="form-control">
                                        @foreach (var item in Model.InsuranceProviders)
                                        {
                                            <option value="@item.Id" class="form-control">@item.Name</option>
                                        }
                                    </select>
                                    @Html.ValidationMessageFor(m => Model.NewForm.InsuranceProviderId, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(m => Model.NewForm.DocumentTypeId, htmlAttributes: new { @class = "control-label col-sm-4" })
                                <div class="col-sm-8">
                                    <select name="NewForm.DocumentTypeId" class="form-control">
                                        @foreach (var item in Model.DocumentTypes)
                                        {
                                            <option value="@item.Id" class="form-control">@item.Name</option>
                                        }
                                    </select>
                                    @Html.ValidationMessageFor(m => Model.NewForm.DocumentTypeId, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(m => Model.NewForm.FileName, htmlAttributes: new { @class = "control-label col-sm-4" })
                                <div class="col-sm-8">
                                    <input type="file" name="fileUpload" class="form-control" data-val="true" data-val-required="File field is required" required/>
                                    @Html.ValidationMessageFor(m => Model.NewForm.FileName, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(m => Model.NewForm.Remarks, htmlAttributes: new { @class = "control-label col-sm-4" })
                                <div class="col-sm-8">
                                    @Html.TextAreaFor(m => Model.NewForm.Remarks, new { @class = "form-control" })
                                    @Html.ValidationMessageFor(m => Model.NewForm.Remarks, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                        <div class="form-bottom-action">
                            <button type="button" class="btn btn-default" data-dismiss="modal">Cancel</button>
                            <button type="submit" class="btn btn-primary">OK</button>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>

    <div class="modal fade" id="add-document-type-modal" role="dialog">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal">&times;</button>
                    <h4 class="modal-title">Add Document Type</h4>
                </div>
                <div class="modal-body">
                    <form class="form-horizontal" action= '@Url.Action("CreateDocumentType")' method="post">
                        <div class="form-group">
                            <label for="document-type" class="col-md-3 control-label">Document Type:</label>
                            <div class="col-md-8">
                                <input type="text" class="form-control" id="document-type" name="Name" required>
                            </div>
                        </div>
                        <div class="form-bottom-action">
                            <button type="button" class="btn btn-default" data-dismiss="modal">Cancel</button>
                            <button type="submit" class="btn btn-success">Ok</button>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>

    @Html.Partial("_EmailFormModal", Model)

    <div class="row page-action-top">
        <div class="col-sm-6 left-pane">
            <label class="control-label">Show:</label>
            <select ng-model="showEntriesVal" ng-change="showEntriesChanged()">
                <option value="10">10</option>
                <option value="25">25</option>
                <option value="50">50</option>
                <option value="100">100</option>
            </select>
            <label class="control-label">entries</label>
            <button type="button" class="btn btn-default btn-sm" aria-label="Form" data-toggle="modal" data-target="#add-form-modal">
                <span class="glyphicon glyphicon-upload" aria-hidden="true"></span>
                Upload New Form
            </button>
            <button type="button" class="btn btn-primary btn-sm" aria-label="Form" data-toggle="modal" data-target="#add-document-type-modal">
                <span class="glyphicon glyphicon-plus" aria-hidden="true"></span>
                <span class="add-btn-label">Document Type</span>
            </button>
        </div>
        <div class="col-sm-6 right-pane">
            <input type="search" ng-model="searchText" ng-change="searchChanged()" placeholder="Search..." />
        </div>
    </div>

    <div id="forms-list-table">
        <table class="table data-table">
            <thead>
                <tr>
                    <th>Company</th>
                    <th>Document Type</th>
                    <th>File</th>
                    <th>Remarks</th>
                    <th>Actions</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in Model.FormsList)
                {
                    <tr>
                        <td>@Html.DisplayFor(modelItem => item.CompanyName)</td>
                        <td>@Html.DisplayFor(modelItem => item.DocumentTypeName)</td>
                        <td>@Html.DisplayFor(modelItem => item.FileName)</td>
                        <td>@Html.DisplayFor(modelItem => item.Remarks)</td>
                        <td>
                            <a href='@Url.Content(item.FileUrl)' target="_blank" class="btn btn-default btn-xs" aria-label="Download" title="Download" download>
                                <span class="glyphicon glyphicon-download-alt" aria-hidden="true"></span>
                            </a>
                            <button type="button" class="btn btn-default btn-xs" aria-label="E-mail" title="E-mail" ng-click="emailForm(@item.Id)" data-toggle="modal" data-target="#email-form-modal">
                                <span class="glyphicon glyphicon-envelope" aria-hidden="true"></span>
                            </button>
                            <button type="button" class="btn btn-default btn-xs" aria-label="Delete" title="Delete" ng-click="deleteForm(@item.Id)" data-toggle="modal" data-target="#confirm-delete-modal">
                                <span class="glyphicon glyphicon-trash" aria-hidden="true"></span>
                            </button>
                        </td>

                    </tr>
                }
            </tbody>
        </table>
    </div>
</div>

@section scripts {
    <script src="~/Scripts/app/forms/formsIndexCtrl.js"></script>
}